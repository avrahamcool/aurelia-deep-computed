{"version":3,"file":"index.js","sources":["../../src/dependency.ts","../../src/computed-observer.ts","../../src/computed-expression.ts","../../src/index.ts"],"sourcesContent":["import {\r\n  ICollectionObserverSplice,\r\n} from 'aurelia-binding';\r\nimport {\r\n  IPropertyObserver,\r\n  ICollectionObserver,\r\n  IDependency,\r\n  IComputedObserver,\r\n  ICollectionDependency\r\n} from './definitions';\r\n\r\n/**@internal */\r\nexport const releaseDep = (dep: IDependency) => {\r\n  dep.release();\r\n};\r\n\r\n/**@internal */\r\nexport const observeDep = (dep: IDependency) => {\r\n  dep.observe();\r\n};\r\n\r\n// for Aurelia binding subscriber, a context is required if it's not a function\r\nconst objectPropDepContext = 'context:object_prop_dep';\r\nconst arrayDepContext = 'context:array_dep';\r\nconst setDepContext = 'context:set_dep';\r\nconst mapDepContext = 'context:map_dep';\r\n\r\nclass ObjectDependency implements IDependency {\r\n  deps: Map<string | number, IDependency> = new Map();\r\n  connected: boolean = false;\r\n  constructor(\r\n    public owner: IComputedObserver,\r\n    public parent: IDependency | null,\r\n    public value: object\r\n  ) { }\r\n\r\n  collect(): void {\r\n    const value = this.value;\r\n    Object.keys(value).forEach(prop => {\r\n      const propertyDep = new ObjectPropertyDependency(this.owner, this, prop, value[prop]);\r\n      this.deps.set(prop, propertyDep);\r\n      propertyDep.collect();\r\n    });\r\n  }\r\n\r\n  observe() {\r\n    this.deps.forEach(observeDep);\r\n    this.connected = true;\r\n  }\r\n\r\n  release(): void {\r\n    this.deps.forEach(releaseDep);\r\n    this.connected = false;\r\n  }\r\n}\r\n\r\nconst emptyMap = new Map<unknown, IDependency>();\r\n\r\nclass ObjectPropertyDependency implements IDependency {\r\n  // object property has only 1 dep, there's no need to create a map\r\n  // so use an empty map instead\r\n  deps = emptyMap;\r\n  observer: IPropertyObserver;\r\n  connected: boolean = false;\r\n\r\n  dep: IDependency;\r\n\r\n  constructor(\r\n    public owner: IComputedObserver,\r\n    public parent: ObjectDependency,\r\n    public property: string,\r\n    public value: any\r\n  ) {}\r\n\r\n  collect(): void {\r\n    this.dep = void 0;\r\n    const owner = this.owner;\r\n    const deep = owner.deep;\r\n    if (!deep) {\r\n      return;\r\n    }\r\n    const valueDep = getDependency(owner, this, this.value);\r\n    if (valueDep == null) {\r\n      return;\r\n    }\r\n    this.dep = valueDep;\r\n    valueDep.collect();\r\n  }\r\n\r\n  observe(): void {\r\n    let observer = this.observer;\r\n    if (observer == null) {\r\n      observer\r\n        = this.observer\r\n        = this\r\n          .owner\r\n          .observerLocator\r\n          .getObserver(this.parent.value, this.property);\r\n    }\r\n    observer.subscribe(objectPropDepContext, this);\r\n    const dep = this.dep;\r\n    if (dep != null) {\r\n      dep.observe();\r\n    }\r\n    this.connected = true;\r\n  }\r\n\r\n  release(): void {\r\n    const observer = this.observer;\r\n    if (observer != null) {\r\n      observer.unsubscribe(objectPropDepContext, this);\r\n      this.observer = void 0;\r\n    }\r\n    const dep = this.dep;\r\n    if (dep != null) {\r\n      dep.release();\r\n      this.dep = void 0;\r\n    }\r\n    this.connected = false;\r\n  }\r\n\r\n  call(): void {\r\n    // when property change\r\n    // 1. release all sub-deps\r\n    this.release();\r\n    // 2. re-evaluate the value\r\n    this.value = this.parent.value[this.property];\r\n    // 3. re-collect deps\r\n    this.collect();\r\n    this.observe();\r\n    // 4. notify the owner\r\n    this.owner.handleChange(this);\r\n  }\r\n}\r\n\r\nabstract class BaseCollectionDependency implements ICollectionDependency {\r\n\r\n  owner: IComputedObserver;\r\n  parent: IDependency | null;\r\n  value: any[] | Map<any, any> | Set<any>;\r\n\r\n  deps: Map<string | number, IDependency> = new Map();\r\n  observer: ICollectionObserver;\r\n  connected: boolean = false;\r\n\r\n  abstract subscribeContext: string;\r\n\r\n  abstract collect(): void;\r\n\r\n  abstract getObserver(): ICollectionObserver;\r\n\r\n  observe() {\r\n    let observer = this.observer;\r\n    if (observer == null) {\r\n      observer = this.observer = this.getObserver();\r\n    }\r\n    observer.subscribe(this.subscribeContext, this);\r\n    this.deps.forEach(observeDep);\r\n    this.connected = true;\r\n  }\r\n\r\n  release(): void {\r\n    const observer = this.observer;\r\n    if (observer != null) {\r\n      observer.unsubscribe(this.subscribeContext, this);\r\n      this.observer = void 0;\r\n    }\r\n    this.deps.forEach(releaseDep);\r\n    this.deps.clear();\r\n    this.connected = false;\r\n  }\r\n\r\n  // todo: more efficient dep recollection\r\n  call(context: string, changeRecords: ICollectionObserverSplice[]): void {\r\n    // when array is mutated\r\n    // 1. release\r\n    this.release();\r\n    // 2. recollect\r\n    this.collect();\r\n    this.observe();\r\n    // 3. notify owner\r\n    this.owner.handleChange(this);\r\n  }\r\n}\r\n\r\nclass ArrayDependency extends BaseCollectionDependency {\r\n\r\n  subscribeContext = arrayDepContext;\r\n\r\n  constructor(\r\n    public owner: IComputedObserver,\r\n    public parent: IDependency | null,\r\n    public value: any[]\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  getObserver(): ICollectionObserver {\r\n    return this\r\n      .owner\r\n      .observerLocator\r\n      .getArrayObserver(this.value);\r\n  }\r\n\r\n  collect(): void {\r\n    const owner = this.owner;\r\n    const deep = owner.deep;\r\n    const deps = this.deps;\r\n    if (!deep) {\r\n      return;\r\n    }\r\n    for (let i = 0, arr = this.value, ii = arr.length; ii > i; ++i) {\r\n      let value = arr[i];\r\n      const dep = getDependency(owner, this, value);\r\n      // if an index is not observable\r\n      // just ignore\r\n      if (dep == void 0) {\r\n        return;\r\n      }\r\n      const existingDep = deps.get(i);\r\n      if (existingDep) {\r\n        existingDep.release();\r\n      }\r\n      deps.set(i, dep);\r\n      dep.collect();\r\n    }\r\n  }\r\n}\r\n\r\nclass MapDependency extends BaseCollectionDependency {\r\n\r\n  subscribeContext = mapDepContext;\r\n\r\n  constructor(\r\n    public owner: IComputedObserver,\r\n    public parent: IDependency | null,\r\n    public value: Map<any, any>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  getObserver(): ICollectionObserver {\r\n    return this\r\n      .owner\r\n      .observerLocator\r\n      .getMapObserver(this.value);\r\n  }\r\n\r\n  collect(): void {\r\n    const owner = this.owner;\r\n    const deep = owner.deep;\r\n    const deps = this.deps;\r\n    if (!deep) {\r\n      return;\r\n    }\r\n    this.value.forEach((value, key) => {\r\n      const dep = getDependency(owner, this, value);\r\n      if (dep == void 0) {\r\n        return;\r\n      }\r\n      const existingDep = deps.get(key);\r\n      if (existingDep) {\r\n        existingDep.release();\r\n      }\r\n      // incorrect to typings, but safe\r\n      deps.set(key, dep);\r\n      dep.collect();\r\n    });\r\n  }\r\n}\r\n\r\nclass SetDependency extends BaseCollectionDependency {\r\n\r\n  subscribeContext = setDepContext;\r\n\r\n  constructor(\r\n    public owner: IComputedObserver,\r\n    public parent: IDependency | null,\r\n    public value: Set<any>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  getObserver(): ICollectionObserver {\r\n    return this\r\n      .owner\r\n      .observerLocator\r\n      .getSetObserver(this.value);\r\n  }\r\n\r\n  collect(): void {\r\n    const owner = this.owner;\r\n    const deep = owner.deep;\r\n    const deps = this.deps;\r\n    if (!deep) {\r\n      return;\r\n    }\r\n    this.value.forEach(value => {\r\n      const dep = getDependency(owner, this, value);\r\n      if (dep == void 0) {\r\n        return;\r\n      }\r\n      const existingDep = deps.get(value);\r\n      if (existingDep) {\r\n        existingDep.release();\r\n      }\r\n      deps.set(value, dep);\r\n      if (deep) {\r\n        dep.collect();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function getDependency(owner: IComputedObserver, parent: IDependency, value: unknown): IDependency {\r\n  const valueType = typeof value;\r\n  if (value == null || valueType === 'boolean' || valueType === 'number' || valueType === 'string' || valueType === 'symbol' || valueType === 'bigint' || typeof value === 'function') {\r\n    return;\r\n  }\r\n  if (Array.isArray(value)) {\r\n    return new ArrayDependency(owner, parent, value);\r\n  }\r\n  if (value instanceof Map) {\r\n    return new MapDependency(owner, parent, value);\r\n  }\r\n  if (value instanceof Set) {\r\n    return new SetDependency(owner, parent, value);\r\n  }\r\n  return new ObjectDependency(owner, parent, value as object);\r\n}\r\n","import {\r\n  ObserverLocator,\r\n  subscriberCollection,\r\n  connectable as $connectable,\r\n  Scope,\r\n  createOverrideContext,\r\n  Binding,\r\n  Disposable,\r\n  sourceContext\r\n} from 'aurelia-binding';\r\nimport {\r\n  ICallable,\r\n  IDependency,\r\n  IComputedOptions,\r\n  ComputedFromPropertyDescriptor\r\n} from './definitions';\r\nimport { ComputedExpression } from './computed-expression';\r\nimport { getDependency, releaseDep } from './dependency';\r\n\r\n// a deep observer needsd to be able to\r\n// - observe all properties, recursively without boundary\r\n// - detect a path of observer change\r\n\r\n/**\r\n * @internal The interface describes methods added by `connectable` & `subscriberCollection` decorators\r\n */\r\nexport interface ComputedObserver extends Binding {\r\n  _version: number;\r\n  addSubscriber(callable: (...args: any[]) => void): boolean;\r\n  addSubscriber(context: string, callable: ICallable): boolean;\r\n  addSubscriber(context: string | ICallable, callable?: ICallable): boolean;\r\n  callSubscribers(newValue: any, oldValue?: any): void;\r\n  hasSubscriber(context: string | ICallable, callable?: ICallable): boolean;\r\n  hasSubscribers(): boolean;\r\n  removeSubscriber(context: string | ICallable, callable?: ICallable): boolean;\r\n  observe(): void;\r\n  unobserve(all?: boolean): void;\r\n}\r\n\r\n// it looks better using @...(), so we cast to any instead of ClassDecorator\r\n// aurelia decorators support both usage: with and without parens\r\nconst connectable = $connectable as any;\r\n\r\n// by default, it does not support value converters & binding behaviors in the expressions\r\n// but maybe it should. TODO\r\nconst emptyLookupFunctions = {\r\n  valueConverters: name => null,\r\n  bindingBehaviors: name => null,\r\n};\r\n\r\nconst unset = {};\r\n\r\nexport class ComputedObserver {\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private isQueued: boolean = false;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private oldValue: any = unset;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private rootDeps: IDependency[];\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private readonly scope: Scope;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private readonly notifyingDeps: IDependency[] = [];\r\n\r\n  /**\r\n   * Only used when the observer is config to cache read\r\n   * @internal\r\n   */\r\n  private currentValue: any;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private $get: () => any;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private observing: boolean;\r\n\r\n  public deep: boolean;\r\n\r\n  public cache: boolean;\r\n\r\n  constructor(\r\n    public obj: object,\r\n    /**\r\n     * The expression that will be used to evaluate \r\n     */\r\n    // this expression has 2 purposes:\r\n    //  - a thin layer wrapping around getting/setting value of the targeted computed property\r\n    //  - an abstraction for dealing with a list of declared dependencies and their corresponding value\r\n    //    that uses existing Aurelia binding capabilities\r\n    public expression: ComputedExpression,\r\n    public observerLocator: ObserverLocator,\r\n    descriptor: PropertyDescriptor,\r\n    computedOptions: IComputedOptions\r\n  ) {\r\n    this.scope = { bindingContext: obj, overrideContext: createOverrideContext(obj) };\r\n    this.deep = computedOptions.deep;\r\n    this.cache = computedOptions.cache;\r\n    if (computedOptions.cache) {\r\n      const propertyName = expression.name;\r\n      const getterFn = (() => \r\n        // not observing === no track === no confidence that the current value is correct\r\n        this.observing ? this.currentValue : this.$get()\r\n      ) as ComputedFromPropertyDescriptor['get'];\r\n      getterFn.computed = computedOptions;\r\n      Object.defineProperty(obj, propertyName, {\r\n        get: getterFn,\r\n        set: descriptor.set,\r\n        configurable: true,\r\n        enumerable: true\r\n      });\r\n      this.$get = () => {\r\n        return descriptor.get.call(obj);\r\n      };\r\n    } else {\r\n      this.$get = () => {\r\n        return expression.evaluate(this.scope, emptyLookupFunctions);\r\n      };\r\n    }\r\n  }\r\n\r\n  getValue(): any {\r\n    return this.cache && this.observing\r\n      ? this.currentValue\r\n      : this.$get();\r\n  }\r\n\r\n  setValue(newValue: any): void {\r\n    // supports getter\r\n    this.expression.assign(this.scope, newValue, emptyLookupFunctions);\r\n  }\r\n\r\n  subscribe(context: string | ICallable, callable?: ICallable): void | Disposable {\r\n    if (!this.hasSubscribers()) {\r\n      this.oldValue = this.$get();\r\n      this.expression.connect(\r\n        /* @connectable makes this class behave as Binding */this,\r\n        this.scope\r\n      );\r\n      this.observeDeps();\r\n      this.observing = true;\r\n    }\r\n    this.addSubscriber(context, callable);\r\n    // scenario where this observer is created manually via ObserverLocator.getObserver\r\n    if (arguments.length === 1 && typeof context === 'function') {\r\n      return {\r\n        dispose: () => {\r\n          this.unsubscribe(context, callable);\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  unsubscribe(context: string | ICallable, callable?: ICallable): void {\r\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\r\n      this.observing = false;\r\n      this.unobserveDeps();\r\n      this.notifyingDeps.length = 0;\r\n      this.unobserve(true);\r\n      this.oldValue = unset;\r\n    }\r\n  }\r\n\r\n  call() {\r\n    let newValue = this.currentValue = this.$get();\r\n    let oldValue = this.oldValue;\r\n    if (newValue !== oldValue) {\r\n      this.oldValue = newValue;\r\n      this.callSubscribers(newValue, oldValue === unset ? void 0 : oldValue);\r\n    }\r\n    if (this.isQueued) {\r\n      this.notifyingDeps.forEach(dep => {\r\n        if (!dep.connected) {\r\n          return;\r\n        }\r\n        dep.release();\r\n        dep.collect();\r\n        dep.observe();\r\n      });\r\n      this.isQueued = false;\r\n    } else {\r\n      this.unobserveDeps();\r\n      this.observeDeps();\r\n    }\r\n    this.notifyingDeps.length = 0;\r\n    this._version++;\r\n    this.expression.connect(/* @connectable makes this class behave as Binding */this, this.scope);\r\n    this.unobserve(false);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  handleChange(dep: IDependency): void {\r\n    const notifyingDeps = this.notifyingDeps;\r\n    if (notifyingDeps.indexOf(dep) === -1) {\r\n      notifyingDeps.push(dep);\r\n    }\r\n    if (this.isQueued) {\r\n      return;\r\n    }\r\n    this.isQueued = true;\r\n    this.observerLocator.taskQueue.queueMicroTask(this);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private observeDeps(): void {\r\n    const values = this.expression.getDeps(this.scope);\r\n    let rootDeps = this.rootDeps;\r\n    if (rootDeps == null) {\r\n      rootDeps = this.rootDeps = values.map(v => getDependency(this, null, v)).filter(Boolean);\r\n    }\r\n    rootDeps.forEach(dep => {\r\n      dep.collect();\r\n      dep.observe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  private unobserveDeps(): void {\r\n    const rootDeps = this.rootDeps;\r\n    if (rootDeps != null) {\r\n      rootDeps.forEach(releaseDep);\r\n      this.rootDeps = void 0;\r\n    }\r\n  }\r\n}\r\n\r\n// use this instead of decorator to avoid extra generated code\r\nconnectable()(ComputedObserver);\r\nsubscriberCollection()(ComputedObserver);\r\n","import { Expression, Scope, Binding } from \"aurelia-binding\";\r\n\r\nexport class ComputedExpression extends Expression {\r\n\r\n  // this is to signal aurelia binding that it's ok trying to invoke .assign on this expression\r\n  isAssignable: boolean = true;\r\n\r\n  constructor(\r\n    public readonly name: string,\r\n    public readonly dependencies: Expression[]\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  evaluate(scope: Scope, lookupFunctions: any) {\r\n    return scope.bindingContext[this.name];\r\n  }\r\n\r\n  assign(scope: Scope, value: any, lookupFunctions: any): void {\r\n    scope.bindingContext[this.name] = value;\r\n  }\r\n\r\n  accept(visitor: any) {\r\n    throw new Error('not implemented');\r\n  }\r\n\r\n  connect(binding: Binding, scope: Scope) {\r\n    let dependencies = this.dependencies;\r\n    let i = dependencies.length;\r\n    while (i--) {\r\n      dependencies[i].connect(binding, scope);\r\n    }\r\n  }\r\n\r\n  getDeps(scope: Scope): any[] {\r\n    return this.dependencies.map(dep => dep.evaluate(scope));\r\n  }\r\n}","import {\r\n  FrameworkConfiguration,\r\n} from 'aurelia-framework';\r\nimport {\r\n  ObserverLocator,\r\n  Parser,\r\n  InternalPropertyObserver,\r\n} from 'aurelia-binding';\r\nimport {\r\n  ComputedFromPropertyDescriptor,\r\n  IProcessedComputedOptions,\r\n  IComputedOptions,\r\n} from './definitions';\r\nimport { ComputedObserver } from './computed-observer';\r\nimport { ComputedExpression } from './computed-expression';\r\n\r\nexport {\r\n  ComputedObserver,\r\n} from './computed-observer';\r\n\r\nexport {\r\n  IDependency\r\n} from './definitions';\r\n\r\nexport function configure(config: FrameworkConfiguration): void {\r\n  // need to run at post task to ensure we don't resolve everything too early\r\n  config.postTask(() => {\r\n    const container = config.container;\r\n    const observerLocator = container.get(ObserverLocator);\r\n    const parser = container.get(Parser);\r\n    // addAdapter is a hook from observer locator to deal with computed properties (getter/getter + setter)\r\n    observerLocator.addAdapter({\r\n      getObserver: (obj, propertyName, descriptor: ComputedFromPropertyDescriptor): InternalPropertyObserver => {\r\n        const computedOptions = descriptor.get.computed;\r\n        if (computedOptions) {\r\n          return createComputedObserver(obj, propertyName, descriptor, observerLocator, parser);\r\n        }\r\n        return null;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function deepComputedFrom(options: Partial<Omit<IComputedOptions, 'deep'>>): MethodDecorator;\r\nexport function deepComputedFrom(...expressions: string[]): MethodDecorator;\r\nexport function deepComputedFrom(...args: (Partial<IComputedOptions> | string)[]) {\r\n  return function (target: any, key: any, descriptor: PropertyDescriptor) {\r\n    (descriptor as ComputedFromPropertyDescriptor).get.computed = buildOptions(args, true);\r\n    return descriptor;\r\n  } as MethodDecorator;\r\n}\r\n\r\nexport function shallowComputedFrom(options: Partial<Omit<IComputedOptions, 'deep'>>): MethodDecorator;\r\nexport function shallowComputedFrom(...expressions: string[]): MethodDecorator;\r\nexport function shallowComputedFrom(...args: (Partial<IComputedOptions> | string)[]) {\r\n  return function (target: any, key: any, descriptor: PropertyDescriptor) {\r\n    (descriptor as ComputedFromPropertyDescriptor).get.computed = buildOptions(args, false);\r\n    return descriptor;\r\n  };\r\n}\r\n\r\nfunction buildOptions(args: (Partial<IComputedOptions> | string)[], deep: boolean): IComputedOptions {\r\n  const isConfigObject = args.length === 1 && typeof args[0] === 'object';\r\n  const deps = isConfigObject\r\n    ? (args[0] as IComputedOptions).deps || []\r\n    : (args as string[]);\r\n  const computedOptions: IComputedOptions = {\r\n    deep: deep,\r\n    deps: typeof deps === 'string' /* could be string when using config object, i.e deps: 'data' */\r\n      ? [deps]\r\n      : deps,\r\n    cache: isConfigObject ? (args[0] as IComputedOptions).cache : false\r\n  };\r\n  return computedOptions;\r\n}\r\n\r\nfunction createComputedObserver(\r\n  obj: any,\r\n  propertyName: string,\r\n  descriptor: ComputedFromPropertyDescriptor,\r\n  observerLocator: ObserverLocator,\r\n  parser: Parser,\r\n) {\r\n  const getterFn = descriptor.get;\r\n  const computedOptions = getterFn.computed as IProcessedComputedOptions;\r\n  let computedExpression = computedOptions.computedExpression;\r\n  if (!(computedExpression instanceof ComputedExpression)) {\r\n    let dependencies = computedOptions.deps;\r\n    let i = dependencies.length;\r\n    const parsedDeps = computedOptions.parsedDeps = Array(dependencies.length);\r\n    while (i--) {\r\n      parsedDeps[i] = parser.parse(dependencies[i]);\r\n    }\r\n    computedExpression = computedOptions.computedExpression = new ComputedExpression(propertyName, parsedDeps);\r\n  }\r\n\r\n  return new ComputedObserver(\r\n    obj,\r\n    computedExpression,\r\n    observerLocator,\r\n    descriptor,\r\n    computedOptions\r\n  );\r\n}\r\n"],"names":["$connectable","createOverrideContext","subscriberCollection","Expression","ObserverLocator","Parser"],"mappings":"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"}